
--// Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

--// Player Setup
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

--// Configuration
local SPEED = 30 -- studs per second
local WAYPOINTS = {
	Vector3.new(115.38, 18.70, 1341.09),
	Vector3.new(107.90, 18.70, 1342.74),
	Vector3.new(96.71, 36.70, 1284.95),
	Vector3.new(105.56, 36.70, 1283.35),
	Vector3.new(106.26, 36.70, 1292.18),
	Vector3.new(107.07, 40.33, 1297.64),
	Vector3.new(111.55, 40.33, 1322.40),
	Vector3.new(114.91, 36.70, 1342.55),
	Vector3.new(106.25, 36.70, 1342.76),
	Vector3.new(96.70, 54.75, 1284.30),
	Vector3.new(111.13, 54.75, 1282.33),
	Vector3.new(119.61, 54.75, 1339.66),
	Vector3.new(162.91, 61.11, 1333.25),
	Vector3.new(153.27, 78.70, 1274.61),
	Vector3.new(103.76, 78.70, 1284.30),
	Vector3.new(106.71, 78.70, 1299.93),
	Vector3.new(134.59, 78.70, 1295.62),
	Vector3.new(138.16, 78.70, 1313.26),
	Vector3.new(112.18, 78.70, 1317.85),
	Vector3.new(117.22, 78.70, 1340.88),
	Vector3.new(163.24, 85.11, 1332.86),
	Vector3.new(153.05, 102.70, 1274.34),
	Vector3.new(135.56, 102.70, 1277.81),
	Vector3.new(141.24, 102.70, 1307.97),
	Vector3.new(133.57, 102.70, 1309.38),
	Vector3.new(138.20, 102.70, 1337.37),
	Vector3.new(123.72, 102.70, 1340.33),
	Vector3.new(113.60, 118.70, 1282.13),
	Vector3.new(97.93, 118.75, 1285.48)
}

--// Disable physics
Humanoid:ChangeState(Enum.HumanoidStateType.Physics)

--// Flight Function
local function flyTo(destination)
	local reached = false
	while not reached do
		local currentPos = RootPart.Position
		local direction = (destination - currentPos)
		local distance = direction.Magnitude

		if distance < 1 then
			reached = true
			break
		end

		local moveVector = direction.Unit * SPEED * RunService.Heartbeat:Wait()
		RootPart.CFrame = CFrame.new(currentPos + moveVector, currentPos + moveVector + direction.Unit)
	end
end

--// Execute flight path
for _, point in ipairs(WAYPOINTS) do
	flyTo(point)
end

--// Restore normal state
Humanoid:ChangeState(Enum.HumanoidStateType.Running)
